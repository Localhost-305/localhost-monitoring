version: '3.9'

services:
  # client:
  
  #   build:
  #     context: .
  #     dockerfile: client/Dockerfile  # Caminho relativo para o Dockerfile dentro da pasta client
  #   volumes:
  #     - ./client:/client  # Monte o diretório client dentro do container
  #   network_mode: "host"  # Opcional: se você quiser que o container tenha acesso direto à rede do host
  #   environment:
  #     - HOST=localhost:9090  # Definindo a variável de ambiente HOST para o seu backend

  prometheus-forum-api:
    image: prom/prometheus:latest
    container_name: prometheus-forum-api
    restart: unless-stopped
    volumes:
      - "C:/Users/gabri/OneDrive/Documentos/Estudos/Fatec/Localhost305 - API/API/Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9091:9090  # Porta do host é 9091, mas dentro do container continua 9090
    networks:
      - monit
    user: root

  grafana-forum-api:
    image: grafana/grafana:latest
    container_name: grafana-forum-api
    restart: unless-stopped
    ports:
      - 3001:3000  # Porta do host para acessar o Grafana
    volumes:
      - ./grafana:/var/lib/grafana  # Persistir os dados do Grafana
    depends_on:
      - prometheus-forum-api  # Garantir que o Prometheus esteja rodando antes
    networks:
      - monit
    user: root


networks:
  monit:
    driver: bridge    
